name: Docker CI/CD Workflow

# Trigger on push and pull requests to main or any specific branch
on:
  push:
    branches:
      - main
      - docker-main
  pull_request:
    branches:
      - main
      - docker-main

jobs:
  build-and-dockerize:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]  # Customize OS matrix
        language-version: ["3.10"]         # Example for Python, adapt as needed

    permissions:
      contents: read
      packages: write   # Needed for pushing to GHCR

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up programming language environment
      - name: Set up language environment
        uses: actions/setup-python@v4   # Change to setup-node@v4 if Node.js
        with:
          python-version: ${{ matrix.language-version }}
          cache: "pip"                 # Change cache for other languages as needed

      # Step 3: Install system dependencies (optional)
      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential

      - name: Install system dependencies (MacOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install pkg-config

      # Step 4: Install project dependencies
      - name: Install project dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt    # Replace with your dependency file

      # Step 5: Run linting and formatting (optional)
      - name: Lint & Format Check
        run: |
          python -m pip install flake8 black autoflake
          flake8 . --max-line-length=120 --exit-zero
          black --check . || echo "Run 'black .' to fix formatting"
          autoflake --check --remove-unused-variables --remove-all-unused-imports -r . || echo "Unused imports found"

      # Step 6: Auto-fix formatting (optional)
      - name: Auto-fix formatting on push
        if: github.event_name == 'push'
        run: |
          black .
          autoflake --in-place --remove-unused-variables --remove-all-unused-imports -r .

      # Step 7: Build Docker image (only Ubuntu recommended)
      - name: Build Docker image
        if: matrix.os == 'ubuntu-latest'
        run: |
          docker build -t ghcr.io/<YOUR_USERNAME>/<PROJECT_NAME>:latest .

      # Step 8: Log in to GitHub Container Registry
      - name: Log in to GHCR
        if: matrix.os == 'ubuntu-latest'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 9: Push Docker image to GHCR
      - name: Push Docker image
        if: matrix.os == 'ubuntu-latest'
        run: |
          docker push ghcr.io/<YOUR_USERNAME>/<PROJECT_NAME>:latest

      # Step 10: Pull latest Docker image (optional verification)
      - name: Pull latest Docker image
        if: matrix.os == 'ubuntu-latest'
        run: |
          docker pull ghcr.io/<YOUR_USERNAME>/<PROJECT_NAME>:latest
